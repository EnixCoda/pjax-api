language: node_js
matrix:
  include:
  - os: linux
    dist: trusty
    sudo: required
    node_js: 8
  - os: osx
    osx_image: xcode8
    node_js: 8
env:
  global:
  - secure: byBYsMBLNyb+DGul6ET+jHuIp2TW1V18zPYZqqAi8HH3jeHErKlN+o3b9jSzz+314hfqVNlvu15ZRjCAF36gQ3BtATjULYmVjdkQxaXY+4zFWdfhEvWmGZ8MWYiUmerizKcPoGbc8FoBlBRBgWMOZO1GhGJF6mzP2F3v2l/dC7o=
  - GIT_OWNER=$(echo $TRAVIS_REPO_SLUG | cut -d/ -f1)
  - GIT_REPO=$(echo $TRAVIS_REPO_SLUG | cut -d/ -f2)
  - GIT_COMMITTER_NAME=$(git log -1 --pretty=format:%an)
  - GIT_COMMITTER_EMAIL=$(git log -1 --pretty=format:%ae)
  - GIT_COMMIT_ID=$(git rev-parse HEAD)
addons:
  firefox: latest
  apt:
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CHROME_BIN=chromium-browser; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install google-chrome; fi
script:
- npm run ci
before_deploy:
- sed -i 's/"private":\ true/"private":\ false/' package.json
- sed -i -E 's/^dist\/?.*$//' .gitignore
deploy:
  provider: npm
  email:
    secure: HzpoPuyrb3gPAJPU1q0utvRz0SyzuLKG+4yRrc9ev9FjgCUFLUwWEq79RGMmTDiziXSjn6o0YKkQfp6LnkYWby7PRf50SJIUyyuWlPVcv5eH7makG9/y3M9HsPsbuz5hfmy1dQ95lZWgoM9aAjkK358ws9pIa/NG/Y4PJ46icE8=
  api_key:
    secure: k9k/ScWG5ig5AnzTgYe43i6I+PgftS100qsF8kAvFPX7GYQEsugK5SCpO5rKFamNFul+dK8yDpGE3rEI87Ec/t3oTeneq51jTTxaTTwgC3X6GgzmaN80DMpqfXBIaksMzFjxjSifsO6NqCE2p6JWP4hLfJeXTX7CdlcZh8T0ois=
  on:
    branch: master
    node: 8
    condition: $TRAVIS_OS_NAME = linux
  skip_cleanup: true
notifications:
  email:
    recipients:
    - secure: HzpoPuyrb3gPAJPU1q0utvRz0SyzuLKG+4yRrc9ev9FjgCUFLUwWEq79RGMmTDiziXSjn6o0YKkQfp6LnkYWby7PRf50SJIUyyuWlPVcv5eH7makG9/y3M9HsPsbuz5hfmy1dQ95lZWgoM9aAjkK358ws9pIa/NG/Y4PJ46icE8=
    on_success: change
    on_failure: always
after_deploy:
- if [ $TRAVIS_BRANCH != "master" ] || [ ! $GH_TOKEN ]; then exit 0; fi
- if [ $deploy == "false" ]; then exit 0; fi
- gulp site
- mkdir ../gh-pages
- cp -rf ./gh-pages ../
- cat package.json | json version
- new_version=$(cat package.json | json version)
- git reset --hard HEAD~
- cat package.json | json version
- old_version=$(cat package.json | json version)
- git reset --hard ORIG_HEAD
- node -e 'if (!require("semver").gte(process.argv[1], process.argv[2])) process.exit(1)' $new_version $old_version || exit 0
- git fetch origin gh-pages:gh-pages
- git checkout --orphan gh-pages
- git checkout -m gh-pages
- ls -a | grep -vE "^.git$|^\.+$" | xargs rm -rf
- cp -rf ../gh-pages/* ./
- find | grep -vE "^./.git(/|$)"
- sed -i 's|\(baseurl:\s\+\)|\1//falsandtru.github.io|' _config.yml
- git config user.name "Travis-CI"
- git config user.email "Travis-CI"
- git add -A :/
- git commit -m 'chore(deploy)'\:' deploy web contents by Travis-CI'
- git push https://${GH_TOKEN}@github.com/${GIT_OWNER}/${GIT_REPO}.git gh-pages:gh-pages 2>&1 | sed -e "s/:\/\/\w\+@/:\/\/[secure]@/g"
